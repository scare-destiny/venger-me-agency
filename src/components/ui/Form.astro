---
export const prerender = false;
import { type Form } from '~/types';
const { inputs, textarea, disclaimer, button = 'Contact us', description = '' } = Astro.props as Form;


if (Astro.request.method === 'POST') {
  try {
    const data = await Astro.request.formData()
    const name = data.get('name')
    const email = data.get('email')
    const message = data.get('textarea')

    console.log(`important ${email}, ${name}, ${message}`)
    

    const payload = {
      name, email,
      message
    }

    const response = await fetch(import.meta.env.INTEGROMAT_WEBHOOK, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json', 
      },
      body: JSON.stringify(payload),
    })

    if (!response.ok) {
      const errorData = await response.text();
    console.error(`HTTP error ${response.status}: ${JSON.stringify(errorData)}`);
    throw new Error(`HTTP error ${response.status}`);
}
  

  }
  catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
}
}
---

<form method="post">
  {
    inputs &&
      inputs.map(
        ({ type = 'text', name, label = '', autocomplete = 'on', placeholder = '', required = true }) =>
          name && (
            <div class="mb-6">
              {label && (
                <label for={name} class="block text-sm font-medium">
                  {label}
                </label>
              )}
              <input
                type={type}
                name={name}
                id={name}
                autocomplete={autocomplete}
                placeholder={placeholder}
                class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
                required={required}
              />
            </div>
          )
      )
  }

  {
    textarea && (
      <div>
        <label for="textarea" class="block text-sm font-medium">
          {textarea.label}
        </label>
        <textarea
          id="textarea"
          name="textarea"
          rows={textarea.rows ? textarea.rows : 4}
          placeholder={textarea.placeholder}
          class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
        />
      </div>
    )
  }

  {
    disclaimer && (
      <div class="mt-3 flex items-start">
        <div class="flex mt-0.5">
          <input
            id="disclaimer"
            name="disclaimer"
            type="checkbox"
            class="cursor-pointer mt-1 py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
            required
          />
        </div>
        <div class="ml-3">
          <label for="disclaimer" class="cursor-pointer select-none text-sm text-gray-600 dark:text-gray-400">
            {disclaimer.label}
          </label>
        </div>
      </div>
    )
  }

  {
    button && (
      <div class="mt-10 grid">
        <button type="submit" class="btn btn-primary cursor-pointer">
          {button}
        </button>
      </div>
    )
  }

  {
    description && (
      <div class="mt-3 text-center">
        <p class="text-sm text-gray-600 dark:text-gray-400">{description}</p>
      </div>
    )
  }
</form>
