---
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import CTA from '~/components/ui/CTA.astro';
import Image from '~/components/common/Image.astro';
import { Icon } from 'astro-icon/components';
import type { Testimonials } from '~/types';

const {
  title = '',
  subtitle = '',
  tagline = '',
  testimonials = [],
  callToAction,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props as Testimonials;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <div class="grid sm:grid-cols-2 gap-6">
    {
      testimonials &&
        testimonials.map(({ title, testimonial, name, job, image, businessURL }) => (
          <div class="flex h-auto">
            <div class="flex flex-col p-4 md:p-6 rounded-md shadow-xl dark:shadow-none dark:border dark:border-slate-600">
              {title && <h2 class="text-lg font-medium leading-6 pb-4">{title}</h2>}
              {testimonial && (
                <blockquote class="flex-auto">
                  <p class="text-muted">" {testimonial} "</p>
                </blockquote>
              )}

              <hr class="border-slate-200 dark:border-slate-600 my-4" />

              <div class="flex items-center">
                {image && (
                  <div class="h-10 w-10 aspect-square rounded-full border border-slate-200 dark:border-slate-600">
                    {typeof image === 'string' ? (
                      <Fragment set:html={image} />
                    ) : (
                      <Image
                        class="h-10 w-10  rounded-full border border-slate-200 dark:border-slate-600"
                        widths={[400, 768]}
                        layout="responsive"
                        {...(image as any)}
                      />
                    )}
                  </div>
                )}

                <div class="grow  flex flex-row ml-3 rtl:ml-0 rtl:mr-3">
                  <div class="flex flex-col">
                    {name && <p class="text-base font-semibold">{name}</p>}
                    {job && <p class="text-xs text-muted">{job}</p>}
                  </div>
                  {businessURL && (
                    <div class="self-center ml-auto">
                      <a
                        href={businessURL}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="hover:text-blue-500 transition duration-300 ease-in-out"
                      >
                        <Icon
                          name="tabler:social"
                          class="w-5 h-5 text-gray-500 hover:text-blue-500 transition duration-300 ease-in-out"
                        />
                      </a>
                    </div>
                  )}
                </div>
              </div>
            </div>
          </div>
        ))
    }
  </div>
  {
    callToAction && (
      <div class="btn flex justify-center mx-auto w-fit mt-8 md:mt-12 font-medium">
        <CTA callToAction={callToAction} />
      </div>
    )
  }
</WidgetWrapper>
